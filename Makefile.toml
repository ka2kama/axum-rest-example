[config]
# Skip loading of all core tasks which saves up a bit on toml parsing and task creation
skip_core_tasks = true
# Skips loading Git related environment variables
skip_git_env_info = true
# Skips loading rust related environment variables
skip_rust_env_info = true
# Skips loading the current crate related environment variables
skip_crate_env_info = true

[env.development]
RUST_LOG = "debug"
RUST_BACKTRACE = 1
RUST_LOG_STYLE = "always"
DYNAMODB_LOCAL_PORT = 28000
DYNAMODB_ADMIN_PORT = 28001
PROJECT_ROOT = "${CARGO_MAKE_WORKING_DIRECTORY}"

[tasks.setup-local]
script = '''
#!/usr/bin/env bash
set -eu

PKG_NAME=$(cat ${PROJECT_ROOT}/Cargo.toml | dasel -r toml 'package.name' | sed "s/^'//;s/'$//")
docker compose -p ${PKG_NAME} -f ${PROJECT_ROOT}/local/compose.yml up -d
sleep 3
${PROJECT_ROOT}/local/create-table.sh
echo "dynamodb-admin listening on http://localhost:${DYNAMODB_ADMIN_PORT}"
'''

[tasks.destroy-local]
script = '''
PKG_NAME=$(cat ${PROJECT_ROOT}/Cargo.toml | dasel -r toml 'package.name' | sed "s/^'//;s/'$//")
docker compose -p ${PKG_NAME} -f ${PROJECT_ROOT}/local/compose.yml down --volumes --remove-orphans
'''

[tasks.lint]
description = "Run linters"
script = '''
export PATH="${PROJECT_ROOT}/node_modules/.bin:$PATH"
cargo +nightly fmt --all -- --check
dprint check --config ${PROJECT_ROOT}/config/.dprint.json
prettier --check ${PROJECT_ROOT}\
    --config ${PROJECT_ROOT}/config/.prettierrc.toml \
    --ignore-path ${PROJECT_ROOT}/config/.prettierignore

cargo +nightly clippy --all-targets --all-features -- -D warnings -D clippy::all
'''

[tasks.fmt]
script = '''
export PATH="${PROJECT_ROOT}/node_modules/.bin:$PATH"

# format Rust code
cargo +nightly fmt --all

# format other files
dprint fmt --incremental=false --config ${PROJECT_ROOT}/config/.dprint.json
prettier --write ${PROJECT_ROOT} \
    --config ${PROJECT_ROOT}/config/.prettierrc.toml \
    --ignore-path ${PROJECT_ROOT}/config/.prettierignore \
    > /dev/null
'''

[tasks.build]
command = "cargo"
args = ["build"]
dependencies = ["fmt"]

[tasks.build-release]
extend = "build"
args = ["build", "--release"]

[tasks.publish-local]
script = '''
export PATH="${PROJECT_ROOT}/bin:$PATH"

APP_NAME=$(cat ${PROJECT_ROOT}/Cargo.toml | dasel -r toml 'package.name' | sed "s/^'//;s/'$//")
docker build \
    --build-arg APP_NAME=$APP_NAME \
    -t $APP_NAME:latest \
    --progress=plain \
    ${PROJECT_ROOT}
'''

[tasks.run]
env_files = [{ path = "${PROJECT_ROOT}/.env" }]
command = "cargo"
args = ["run"]
dependencies = ["fmt"]
watch = { watch = ["${PROJECT_ROOT}/Cargo.toml", "${PROJECT_ROOT}/src"] }
